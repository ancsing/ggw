/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package geogebra.kernel.parser;
import geogebra.*;
import geogebra.main.*;
import geogebra.kernel.*;
import geogebra.kernel.arithmetic.*;
import geogebra.kernel.arithmetic3D.*;
import geogebra.kernel.parser.cashandlers.*;
import geogebra.util.Unicode;
import java.util.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 56;
            return 66;
         }
         if ((active1 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 56;
            return 617;
         }
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            return 83;
         }
         if ((active0 & 0x80L) != 0L)
            return 0;
         if ((active0 & 0x4000010000000000L) != 0L)
         {
            jjmatchedKind = 56;
            return 62;
         }
         if ((active0 & 0x800000000000L) != 0L)
            return 124;
         if ((active0 & 0x40000L) != 0L)
            return 15;
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 56;
            return 232;
         }
         if ((active0 & 0x80000000L) != 0L)
            return 9;
         if ((active0 & 0x2000000000000L) != 0L)
            return 110;
         if ((active0 & 0x1000000000000L) != 0L)
            return 117;
         if ((active0 & 0x20000000000L) != 0L || (active1 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 56;
            return 94;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 39;
         if ((active0 & 0x20000L) != 0L)
            return 12;
         if ((active0 & 0x800000L) != 0L)
            return 6;
         return -1;
      case 1:
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 1;
            return 82;
         }
         if ((active0 & 0x4000030000000000L) != 0L || (active1 & 0x3010000200000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 1;
            return 618;
         }
         return -1;
      case 2:
         if ((active0 & 0x20000000000L) != 0L)
            return 618;
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 2;
            return 81;
         }
         if ((active0 & 0x4000010000000000L) != 0L || (active1 & 0x3010000200000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 2;
            return 618;
         }
         return -1;
      case 3:
         if ((active0 & 0x10000000000L) != 0L)
            return 618;
         if ((active1 & 0x3010000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 3;
            return 618;
         }
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 3;
            return 80;
         }
         return -1;
      case 4:
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 4;
            return 619;
         }
         if ((active1 & 0x3000000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 4;
            return 618;
         }
         return -1;
      case 5:
         if ((active1 & 0x3004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 5;
            return 618;
         }
         return -1;
      case 6:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 6;
            return 618;
         }
         if ((active1 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 6;
            return -1;
         }
         return -1;
      case 7:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 7;
            return 618;
         }
         if ((active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 6;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 8;
            return 618;
         }
         return -1;
      case 9:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 9;
            return 618;
         }
         return -1;
      case 10:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 10;
            return 618;
         }
         return -1;
      case 11:
         if ((active1 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 11;
            return 618;
         }
         return -1;
      case 12:
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos < 11)
            {
               jjmatchedKind = 56;
               jjmatchedPos = 11;
            }
            return -1;
         }
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 12;
            return 618;
         }
         return -1;
      case 13:
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos < 11)
            {
               jjmatchedKind = 56;
               jjmatchedPos = 11;
            }
            return -1;
         }
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 13;
            return 618;
         }
         return -1;
      case 14:
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 14;
            return 618;
         }
         return -1;
      case 15:
         if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 15;
            return 618;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_0(0, 31, 9);
      case 39:
         return jjStopAtPos(0, 42);
      case 40:
         return jjStopAtPos(0, 123);
      case 41:
         return jjStopAtPos(0, 120);
      case 43:
         return jjStopAtPos(0, 24);
      case 47:
         return jjStopAtPos(0, 30);
      case 58:
         jjmatchedKind = 117;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 59:
         return jjStopAtPos(0, 5);
      case 60:
         return jjStartNfaWithStates_0(0, 17, 12);
      case 61:
         return jjStartNfaWithStates_0(0, 23, 6);
      case 62:
         return jjStartNfaWithStates_0(0, 18, 15);
      case 91:
         return jjStopAtPos(0, 118);
      case 92:
         return jjStopAtPos(0, 16);
      case 93:
         return jjStopAtPos(0, 119);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000000L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x4000010000000000L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000000000L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x1000000000000L);
      case 120:
         return jjStartNfaWithStates_0(0, 47, 124);
      case 121:
         return jjStartNfaWithStates_0(0, 48, 117);
      case 122:
         return jjStartNfaWithStates_0(0, 49, 110);
      case 123:
         return jjStopAtPos(0, 121);
      case 124:
         return jjStartNfaWithStates_0(0, 7, 0);
      case 125:
         return jjStopAtPos(0, 122);
      case 172:
         return jjStopAtPos(0, 8);
      case 176:
         return jjStopAtPos(0, 38);
      case 8315:
         return jjStartNfaWithStates_0(0, 26, 39);
      case 8712:
         return jjStopAtPos(0, 13);
      case 8741:
         return jjStopAtPos(0, 21);
      case 8834:
         return jjStopAtPos(0, 15);
      case 8838:
         return jjStopAtPos(0, 14);
      case 8855:
         return jjStopAtPos(0, 29);
      case 8869:
         return jjStopAtPos(0, 22);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000020000000000L, active1, 0x1004000000000L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000000L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000000000000L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 41, 618);
         break;
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000L, active1, 0x1000000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 40:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(3, 62);
         else if ((active1 & 0x200000L) != 0L)
            return jjStopAtPos(3, 85);
         break;
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000000L);
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000000000L);
      case 102:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 40, 618);
         break;
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStopAtPos(4, 104);
         break;
      case 97:
         return jjMoveStringLiteralDfa5_0(active1, 0x4000000000L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000000000000L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 82:
         return jjMoveStringLiteralDfa6_0(active1, 0x4000000000L);
      case 109:
         return jjMoveStringLiteralDfa6_0(active1, 0x1000000000000L);
      case 116:
         return jjMoveStringLiteralDfa6_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 40:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000000000000L);
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000000000L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 41:
         if ((active1 & 0x1000000000000L) != 0L)
            return jjStopAtPos(7, 112);
         break;
      case 103:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000000000L);
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000000000000L);
      case 117:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, 0L, active1);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(7, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active1, 0x2000000000000L);
      case 108:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(8, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(9, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, 0L, active1);
      return 11;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa12_0(active1, 0x4000000000L);
      case 116:
         return jjMoveStringLiteralDfa12_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, 0L, active1);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(10, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, 0L, active1);
      return 12;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa13_0(active1, 0x4000000000L);
      case 167:
         return jjMoveStringLiteralDfa13_0(active1, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, 0L, active1);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(11, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x2000000000000L) != 0L)
            return jjStopAtPos(13, 113);
         break;
      case 122:
         return jjMoveStringLiteralDfa14_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, 0L, active1);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(12, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa15_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa16_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x4000000000L) != 0L)
            return jjStopAtPos(16, 102);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x10000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0x8000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec2 = {
   0x0L, 0x80000000L, 0x0L, 0x0L
};
static final long[] jjbitVec3 = {
   0x0L, 0x100000000L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0x1000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec5 = {
   0x0L, 0x2000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec6 = {
   0x80000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec7 = {
   0x40000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec8 = {
   0x2000000L, 0x0L, 0x0L, 0x20L
};
static final long[] jjbitVec9 = {
   0x0L, 0x0L, 0x0L, 0x2000000000000000L
};
static final long[] jjbitVec10 = {
   0x0L, 0x800000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec11 = {
   0x0L, 0x0L, 0x20c000000000000L, 0x0L
};
static final long[] jjbitVec12 = {
   0x0L, 0x3f1000000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec13 = {
   0x0L, 0x0L, 0x0L, 0x1L
};
static final long[] jjbitVec14 = {
   0x800000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec15 = {
   0x0L, 0x0L, 0x800000000000L, 0x0L
};
static final long[] jjbitVec16 = {
   0x40000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec17 = {
   0x1000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec18 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec20 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec21 = {
   0x0L, 0x80000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec22 = {
   0x1e00L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec23 = {
   0x0L, 0xffc000000000L, 0x0L, 0xffc000000000L
};
static final long[] jjbitVec24 = {
   0x0L, 0x3ff00000000L, 0x0L, 0x3ff000000000000L
};
static final long[] jjbitVec25 = {
   0x0L, 0xffc000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec26 = {
   0x0L, 0x3ff0000L, 0x0L, 0x3ff0000L
};
static final long[] jjbitVec27 = {
   0x3ff00000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec28 = {
   0x0L, 0x3ffL, 0x0L, 0x0L
};
static final long[] jjbitVec29 = {
   0x0L, 0x0L, 0x0L, 0x3ff00000000L
};
static final long[] jjbitVec30 = {
   0x3ff0000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec31 = {
   0x0L, 0x3ff0000L, 0x3ff000000000000L, 0x0L
};
static final long[] jjbitVec32 = {
   0x0L, 0x3ff03ffL, 0x0L, 0x0L
};
static final long[] jjbitVec33 = {
   0x0L, 0x0L, 0x0L, 0x3ff0000L
};
static final long[] jjbitVec34 = {
   0x600007fffffc0L, 0xffffffffffffc000L, 0xffffffffffffffffL, 0x13000000007fffffL
};
static final long[] jjbitVec35 = {
   0x0L, 0x0L, 0x80000000000000L, 0xffffffffff7fffffL
};
static final long[] jjbitVec36 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffff0L
};
static final long[] jjbitVec37 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x1ffffffffffL, 0x0L
};
static final long[] jjbitVec38 = {
   0x0L, 0x0L, 0xfffffffffffe0000L, 0xfffffffffffffL
};
static final long[] jjbitVec39 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffff0003L, 0x3ffffffffffffffL
};
static final long[] jjbitVec40 = {
   0xfffe000000000000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec41 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x1fffffffffffffffL
};
static final long[] jjbitVec42 = {
   0x0L, 0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec43 = {
   0xffffffffffffffffL, 0xffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec44 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffL, 0x0L
};
static final long[] jjbitVec45 = {
   0xffffffffe0000000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec46 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec47 = {
   0xfffffffffff80000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec48 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffffL
};
static final long[] jjbitVec49 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0x1fffffffffffffffL
};
static final long[] jjbitVec50 = {
   0x0L, 0xffffffc000000000L, 0xfffffffe3fffffffL, 0x1fffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 617;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 83:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     jjCheckNAddStates(7, 21);
                  }
                  else if (curChar == 36)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(22, 28);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAddStates(29, 31);
                  }
                  else if (curChar == 37)
                     jjAddStates(32, 34);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(102, 103);
                  else if (curChar == 44)
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  else if (curChar == 42)
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 25)
                        kind = 25;
                  }
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  else if (curChar == 63)
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  if (curChar == 36)
                     jjAddStates(35, 36);
                  else if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 110:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 61)
                        kind = 61;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 94:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 82:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 117:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 60)
                        kind = 60;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 81:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 619:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 101)
                        kind = 101;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 66:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 618:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 80:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 617:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 232:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 62:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 124:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 59)
                        kind = 59;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  else if (curChar == 36)
                     jjCheckNAdd(211);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(208);
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 3:
                  if (curChar == 38 && kind > 10)
                     kind = 10;
                  break;
               case 4:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 61 && kind > 11)
                     kind = 11;
                  break;
               case 7:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 61 && kind > 12)
                     kind = 12;
                  break;
               case 10:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 12:
                  if (curChar == 61 && kind > 19)
                     kind = 19;
                  break;
               case 13:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if (curChar == 61 && kind > 20)
                     kind = 20;
                  break;
               case 16:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 18:
                  if (curChar == 45 && kind > 25)
                     kind = 25;
                  break;
               case 20:
                  if (curChar == 42 && kind > 27)
                     kind = 27;
                  break;
               case 21:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 42 && kind > 28)
                     kind = 28;
                  break;
               case 23:
                  if (curChar == 63 && kind > 32)
                     kind = 32;
                  break;
               case 55:
                  if (curChar == 44 && kind > 46)
                     kind = 46;
                  break;
               case 56:
                  if (curChar == 40 && kind > 84)
                     kind = 84;
                  break;
               case 57:
               case 454:
               case 553:
               case 557:
                  if (curChar == 50)
                     jjCheckNAdd(56);
                  break;
               case 64:
                  if (curChar == 40 && kind > 95)
                     kind = 95;
                  break;
               case 71:
                  if (curChar == 40 && kind > 96)
                     kind = 96;
                  break;
               case 74:
                  if (curChar == 40 && kind > 99)
                     kind = 99;
                  break;
               case 79:
                  if (curChar == 40 && kind > 101)
                     kind = 101;
                  break;
               case 90:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 101:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(102, 103);
                  break;
               case 102:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(102, 103);
                  break;
               case 103:
                  if (curChar == 34 && kind > 115)
                     kind = 115;
                  break;
               case 105:
                  if (curChar == 40 && kind > 61)
                     kind = 61;
                  break;
               case 112:
                  if (curChar == 40 && kind > 60)
                     kind = 60;
                  break;
               case 119:
                  if (curChar == 40 && kind > 59)
                     kind = 59;
                  break;
               case 125:
                  if (curChar == 37)
                     jjAddStates(32, 34);
                  break;
               case 133:
                  if (curChar == 40 && kind > 67)
                     kind = 67;
                  break;
               case 139:
                  if (curChar == 40 && kind > 68)
                     kind = 68;
                  break;
               case 141:
                  if (curChar == 40 && kind > 90)
                     kind = 90;
                  break;
               case 148:
                  if (curChar == 40 && kind > 91)
                     kind = 91;
                  break;
               case 167:
                  if (curChar == 40 && kind > 107)
                     kind = 107;
                  break;
               case 180:
                  if (curChar != 46)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAddStates(29, 31);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(181);
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(182, 183);
                  break;
               case 184:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(185);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAdd(185);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 187:
                  if (curChar == 37 && kind > 52)
                     kind = 52;
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(7, 21);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(189, 190);
                  break;
               case 190:
                  if (curChar == 46)
                     jjCheckNAdd(191);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(191);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(192, 193);
                  break;
               case 193:
                  if (curChar == 46 && kind > 50)
                     kind = 50;
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(37, 39);
                  break;
               case 195:
                  if (curChar == 46)
                     jjCheckNAdd(196);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(196, 183);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 198);
                  break;
               case 198:
                  if (curChar == 46)
                     jjCheckNAdd(183);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(40, 42);
                  break;
               case 200:
                  if (curChar == 46)
                     jjCheckNAdd(201);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(201, 187);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(202, 203);
                  break;
               case 203:
                  if (curChar == 46)
                     jjCheckNAdd(187);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(204);
                  break;
               case 205:
                  if (curChar == 36)
                     jjAddStates(35, 36);
                  break;
               case 207:
                  if (curChar == 36)
                     jjCheckNAdd(208);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(208);
                  break;
               case 210:
                  if (curChar == 36)
                     jjCheckNAdd(211);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  break;
               case 212:
                  if (curChar == 40 && kind > 114)
                     kind = 114;
                  break;
               case 214:
                  if (curChar != 36)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(22, 28);
                  break;
               case 215:
                  if ((0x3ff009000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(4, 6);
                  break;
               case 217:
                  if ((0xfffffffbffffffffL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 218:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 220:
                  jjAddStates(43, 44);
                  break;
               case 222:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 224:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 225:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 227:
                  jjAddStates(45, 46);
                  break;
               case 230:
                  if (curChar == 40 && kind > 63)
                     kind = 63;
                  break;
               case 236:
                  if (curChar == 40 && kind > 64)
                     kind = 64;
                  break;
               case 238:
                  if (curChar == 40 && kind > 69)
                     kind = 69;
                  break;
               case 248:
                  if (curChar == 40 && kind > 70)
                     kind = 70;
                  break;
               case 253:
                  if (curChar == 40 && kind > 73)
                     kind = 73;
                  break;
               case 259:
                  if (curChar == 40 && kind > 74)
                     kind = 74;
                  break;
               case 261:
                  if (curChar == 40 && kind > 75)
                     kind = 75;
                  break;
               case 273:
                  if (curChar == 40 && kind > 76)
                     kind = 76;
                  break;
               case 280:
                  if (curChar == 40 && kind > 79)
                     kind = 79;
                  break;
               case 287:
                  if (curChar == 40 && kind > 80)
                     kind = 80;
                  break;
               case 290:
                  if (curChar == 40 && kind > 86)
                     kind = 86;
                  break;
               case 297:
                  if (curChar == 40 && kind > 87)
                     kind = 87;
                  break;
               case 300:
                  if (curChar == 40 && kind > 108)
                     kind = 108;
                  break;
               case 304:
                  if (curChar == 40 && kind > 109)
                     kind = 109;
                  break;
               case 366:
                  if (curChar == 40 && kind > 65)
                     kind = 65;
                  break;
               case 372:
                  if (curChar == 40 && kind > 66)
                     kind = 66;
                  break;
               case 374:
                  if (curChar == 40 && kind > 71)
                     kind = 71;
                  break;
               case 380:
                  if (curChar == 40 && kind > 72)
                     kind = 72;
                  break;
               case 382:
                  if (curChar == 40 && kind > 77)
                     kind = 77;
                  break;
               case 389:
                  if (curChar == 40 && kind > 78)
                     kind = 78;
                  break;
               case 392:
                  if (curChar == 40 && kind > 88)
                     kind = 88;
                  break;
               case 399:
                  if (curChar == 40 && kind > 89)
                     kind = 89;
                  break;
               case 402:
                  if (curChar == 40 && kind > 103)
                     kind = 103;
                  break;
               case 406:
                  if (curChar == 40 && kind > 106)
                     kind = 106;
                  break;
               case 436:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 442:
                  if (curChar == 40 && kind > 82)
                     kind = 82;
                  break;
               case 448:
                  if (curChar == 40 && kind > 83)
                     kind = 83;
                  break;
               case 460:
                  if (curChar == 40 && kind > 92)
                     kind = 92;
                  break;
               case 467:
                  if (curChar == 40 && kind > 93)
                     kind = 93;
                  break;
               case 474:
                  if (curChar == 40 && kind > 94)
                     kind = 94;
                  break;
               case 481:
                  if (curChar == 40 && kind > 105)
                     kind = 105;
                  break;
               case 484:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 491:
                  if (curChar == 40 && kind > 100)
                     kind = 100;
                  break;
               case 606:
                  if (curChar == 40 && kind > 97)
                     kind = 97;
                  break;
               case 608:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 611:
                  if (curChar == 40 && kind > 98)
                     kind = 98;
                  break;
               case 613:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 614:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 83:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(22, 28);
                  }
                  else if (curChar == 94)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(57, 62);
                  if (curChar == 108)
                     jjAddStates(63, 68);
                  else if (curChar == 97)
                     jjAddStates(69, 86);
                  else if (curChar == 105)
                     jjAddStates(87, 90);
                  else if (curChar == 98)
                     jjAddStates(91, 92);
                  else if (curChar == 65)
                     jjAddStates(93, 101);
                  else if (curChar == 83)
                     jjAddStates(102, 111);
                  else if (curChar == 115)
                     jjAddStates(112, 122);
                  else if (curChar == 67)
                     jjAddStates(123, 140);
                  else if (curChar == 99)
                     jjAddStates(141, 158);
                  else if (curChar == 70)
                     jjAddStates(159, 160);
                  else if (curChar == 102)
                     jjAddStates(161, 162);
                  else if (curChar == 84)
                     jjAddStates(163, 167);
                  else if (curChar == 116)
                     jjAddStates(168, 172);
                  else if (curChar == 120)
                     jjCheckNAddTwoStates(119, 124);
                  else if (curChar == 121)
                     jjCheckNAddTwoStates(112, 117);
                  else if (curChar == 122)
                     jjCheckNAddTwoStates(105, 110);
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 99;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 94;
                  else if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 88;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 83;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 77;
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 72;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 69;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 66;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 62;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 53;
                  else if (curChar == 80)
                     jjCheckNAdd(40);
                  else if (curChar == 112)
                     jjCheckNAdd(40);
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 110:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 94:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 82:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 117:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 81:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 619:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 618:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  break;
               case 80:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 97)
                     jjCheckNAdd(79);
                  break;
               case 617:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 105)
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  break;
               case 232:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 311;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 302;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 274;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 298;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 263;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 292;
                  else if (curChar == 115)
                     jjCheckNAdd(245);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 288;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 239;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 282;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 268;
                  if (curChar == 111)
                     jjCheckNAdd(256);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 254;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 251;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 243;
                  if (curChar == 111)
                     jjCheckNAdd(233);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 62:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 124:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  else if (curChar == 95)
                     jjAddStates(47, 48);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(49, 50);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 0:
                  if (curChar == 124 && kind > 9)
                     kind = 9;
                  break;
               case 19:
                  if (curChar == 94 && kind > 27)
                     kind = 27;
                  break;
               case 24:
                  if (curChar == 100 && kind > 32)
                     kind = 32;
                  break;
               case 25:
                  if (curChar == 101)
                     jjCheckNAdd(24);
                  break;
               case 26:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 78 && kind > 32)
                     kind = 32;
                  break;
               case 34:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 110)
                     jjCheckNAdd(24);
                  break;
               case 37:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 40:
                  if (curChar == 105 && kind > 35)
                     kind = 35;
                  break;
               case 41:
               case 126:
                  if (curChar == 112)
                     jjCheckNAdd(40);
                  break;
               case 42:
                  if (curChar == 80)
                     jjCheckNAdd(40);
                  break;
               case 47:
                  if (curChar == 121 && kind > 39)
                     kind = 39;
                  break;
               case 48:
               case 509:
                  if (curChar == 116)
                     jjCheckNAdd(47);
                  break;
               case 49:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 63:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 65:
               case 68:
                  if (curChar == 112)
                     jjCheckNAdd(64);
                  break;
               case 67:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 69:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 72:
               case 605:
                  if (curChar == 110)
                     jjCheckNAdd(71);
                  break;
               case 73:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 75:
               case 488:
                  if (curChar == 97)
                     jjCheckNAdd(74);
                  break;
               case 76:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 84:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
               case 519:
                  if (curChar == 97)
                     jjCheckNAdd(79);
                  break;
               case 86:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
               case 96:
                  if (curChar == 100)
                     jjCheckNAdd(90);
                  break;
               case 92:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 95:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 97:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  jjAddStates(173, 174);
                  break;
               case 104:
                  if (curChar == 122)
                     jjCheckNAddTwoStates(105, 110);
                  break;
               case 106:
                  if (curChar == 100)
                     jjCheckNAdd(105);
                  break;
               case 107:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 111:
                  if (curChar == 121)
                     jjCheckNAddTwoStates(112, 117);
                  break;
               case 113:
                  if (curChar == 100)
                     jjCheckNAdd(112);
                  break;
               case 114:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 118:
                  if (curChar == 120)
                     jjCheckNAddTwoStates(119, 124);
                  break;
               case 120:
                  if (curChar == 100)
                     jjCheckNAdd(119);
                  break;
               case 121:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 127:
                  if (curChar == 101 && kind > 36)
                     kind = 36;
                  break;
               case 128:
                  if (curChar == 105 && kind > 37)
                     kind = 37;
                  break;
               case 129:
                  if (curChar == 116)
                     jjAddStates(168, 172);
                  break;
               case 130:
                  if (curChar == 101 && kind > 43)
                     kind = 43;
                  break;
               case 131:
               case 152:
                  if (curChar == 117)
                     jjCheckNAdd(130);
                  break;
               case 132:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 134:
               case 154:
                  if (curChar == 110)
                     jjCheckNAdd(133);
                  break;
               case 135:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 110)
                     jjAddStates(175, 176);
                  break;
               case 140:
               case 156:
                  if (curChar == 97)
                     jjCheckNAdd(136);
                  break;
               case 142:
               case 157:
                  if (curChar == 104)
                     jjCheckNAdd(141);
                  break;
               case 143:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 104)
                     jjAddStates(177, 178);
                  break;
               case 149:
               case 160:
                  if (curChar == 110)
                     jjCheckNAdd(145);
                  break;
               case 150:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 84)
                     jjAddStates(163, 167);
                  break;
               case 153:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 158:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 161:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 102)
                     jjAddStates(161, 162);
                  break;
               case 163:
                  if (curChar == 101 && kind > 44)
                     kind = 44;
                  break;
               case 164:
               case 173:
                  if (curChar == 115)
                     jjCheckNAdd(163);
                  break;
               case 165:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 168:
               case 176:
                  if (curChar == 114)
                     jjCheckNAdd(167);
                  break;
               case 169:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 70)
                     jjAddStates(159, 160);
                  break;
               case 174:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 177:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 183:
                  if (curChar == 69)
                     jjAddStates(179, 180);
                  break;
               case 206:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(54, 56);
                  break;
               case 209:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(51, 53);
                  break;
               case 213:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(57, 62);
                  break;
               case 214:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(22, 28);
                  break;
               case 215:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(4, 6);
                  break;
               case 216:
                  if (curChar == 95)
                     jjAddStates(49, 50);
                  break;
               case 217:
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 218:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 219:
                  if (curChar == 123)
                     jjCheckNAdd(220);
                  break;
               case 220:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(220, 221);
                  break;
               case 221:
                  if (curChar != 125)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 222:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 223:
                  if (curChar == 95)
                     jjAddStates(47, 48);
                  break;
               case 224:
                  jjCheckNAddTwoStates(225, 212);
                  break;
               case 225:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 226:
                  if (curChar == 123)
                     jjCheckNAdd(227);
                  break;
               case 227:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(227, 228);
                  break;
               case 228:
                  if (curChar == 125)
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 229:
                  if (curChar == 99)
                     jjAddStates(141, 158);
                  break;
               case 231:
               case 314:
                  if (curChar == 115)
                     jjCheckNAdd(230);
                  break;
               case 233:
                  if (curChar == 115)
                     jjAddStates(181, 182);
                  break;
               case 237:
               case 316:
                  if (curChar == 111)
                     jjCheckNAdd(233);
                  break;
               case 239:
               case 241:
               case 317:
               case 319:
                  if (curChar == 99)
                     jjCheckNAdd(238);
                  break;
               case 240:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 242:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 99)
                     jjAddStates(183, 184);
                  break;
               case 249:
               case 323:
                  if (curChar == 115)
                     jjCheckNAdd(245);
                  break;
               case 250:
               case 324:
                  if (curChar == 101)
                     jjCheckNAdd(245);
                  break;
               case 251:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 254:
               case 327:
                  if (curChar == 116)
                     jjCheckNAdd(253);
                  break;
               case 255:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 116)
                     jjAddStates(185, 186);
                  break;
               case 260:
               case 329:
                  if (curChar == 111)
                     jjCheckNAdd(256);
                  break;
               case 262:
               case 265:
               case 330:
               case 333:
                  if (curChar == 104)
                     jjCheckNAdd(261);
                  break;
               case 263:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 266:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 104)
                     jjAddStates(187, 188);
                  break;
               case 274:
               case 276:
               case 338:
               case 340:
                  if (curChar == 99)
                     jjCheckNAdd(270);
                  break;
               case 275:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 277:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 281:
               case 344:
                  if (curChar == 104)
                     jjCheckNAdd(280);
                  break;
               case 282:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 104)
                     jjAddStates(189, 190);
                  break;
               case 288:
               case 347:
                  if (curChar == 116)
                     jjCheckNAdd(284);
                  break;
               case 289:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
               case 349:
                  if (curChar == 104)
                     jjCheckNAdd(290);
                  break;
               case 292:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 104)
                     jjAddStates(191, 192);
                  break;
               case 298:
               case 352:
                  if (curChar == 115)
                     jjCheckNAdd(294);
                  break;
               case 299:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 301:
               case 354:
                  if (curChar == 108)
                     jjCheckNAdd(300);
                  break;
               case 302:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 305:
               case 357:
                  if (curChar == 101)
                     jjCheckNAdd(304);
                  break;
               case 306:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 67)
                     jjAddStates(123, 140);
                  break;
               case 315:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 318:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 320:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 325:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 328:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 331:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 334:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 339:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 341:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 345:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 348:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 350:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 353:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 355:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 358:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 115)
                     jjAddStates(112, 122);
                  break;
               case 367:
               case 413:
                  if (curChar == 110)
                     jjCheckNAdd(366);
                  break;
               case 368:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 110)
                     jjAddStates(193, 194);
                  break;
               case 373:
               case 415:
                  if (curChar == 105)
                     jjCheckNAdd(369);
                  break;
               case 375:
               case 416:
                  if (curChar == 99)
                     jjCheckNAdd(374);
                  break;
               case 376:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 99)
                     jjAddStates(195, 196);
                  break;
               case 381:
               case 418:
                  if (curChar == 101)
                     jjCheckNAdd(377);
                  break;
               case 383:
               case 419:
                  if (curChar == 104)
                     jjCheckNAdd(382);
                  break;
               case 384:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 104)
                     jjAddStates(197, 198);
                  break;
               case 390:
               case 422:
                  if (curChar == 99)
                     jjCheckNAdd(386);
                  break;
               case 391:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 393:
               case 424:
                  if (curChar == 104)
                     jjCheckNAdd(392);
                  break;
               case 394:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 104)
                     jjAddStates(199, 200);
                  break;
               case 400:
               case 427:
                  if (curChar == 110)
                     jjCheckNAdd(396);
                  break;
               case 401:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 403:
               case 429:
                  if (curChar == 116)
                     jjCheckNAdd(402);
                  break;
               case 404:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
               case 409:
               case 432:
                  if (curChar == 110)
                     jjCheckNAdd(406);
                  break;
               case 408:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 410:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 83)
                     jjAddStates(102, 111);
                  break;
               case 414:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 417:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 420:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 423:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 425:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 428:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 430:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 433:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 65)
                     jjAddStates(93, 101);
                  break;
               case 437:
               case 525:
               case 528:
               case 533:
                  if (curChar == 115)
                     jjCheckNAdd(436);
                  break;
               case 438:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 443:
               case 537:
               case 540:
                  if (curChar == 110)
                     jjCheckNAdd(442);
                  break;
               case 444:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 449:
               case 545:
               case 548:
                  if (curChar == 110)
                     jjCheckNAdd(448);
                  break;
               case 450:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 455:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 461:
               case 563:
               case 567:
               case 573:
                  if (curChar == 104)
                     jjCheckNAdd(460);
                  break;
               case 462:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 468:
               case 578:
               case 582:
                  if (curChar == 104)
                     jjCheckNAdd(467);
                  break;
               case 469:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 475:
               case 588:
               case 592:
                  if (curChar == 104)
                     jjCheckNAdd(474);
                  break;
               case 476:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 482:
               case 598:
                  if (curChar == 115)
                     jjCheckNAdd(481);
                  break;
               case 483:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 485:
               case 600:
                  if (curChar == 103)
                     jjCheckNAdd(484);
                  break;
               case 486:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 98)
                     jjAddStates(91, 92);
                  break;
               case 489:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 492:
                  if (curChar == 100)
                     jjCheckNAdd(491);
                  break;
               case 493:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if (curChar == 105)
                     jjAddStates(87, 90);
                  break;
               case 507:
                  if (curChar == 102 && kind > 39)
                     kind = 39;
                  break;
               case 508:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 510:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if (curChar == 97)
                     jjCheckNAdd(491);
                  break;
               case 516:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 518:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 520:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 521:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if (curChar == 97)
                     jjAddStates(69, 86);
                  break;
               case 526:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 529:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 530:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 531:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 532:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 534:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 535:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 536:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 538:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 539:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 541:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 542:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 544:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 546:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 547:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 549:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 551:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 552:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 554:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 555:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 558:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 559:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 560:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 564:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 566:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 571:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 572:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 574:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 576:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 579:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 580:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 581:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 583:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 585:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 586:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 589:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 590:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 591:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 593:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 594:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 595:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 599:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 601:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if (curChar == 108)
                     jjAddStates(63, 68);
                  break;
               case 603:
                  if (curChar == 103)
                     jjCheckNAdd(71);
                  break;
               case 604:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 607:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 609:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 610:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 612:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 615:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 616:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 83:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 12)
                        kind = 12;
                  }
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 19)
                        kind = 19;
                  }
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 20)
                        kind = 20;
                  }
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 25)
                        kind = 25;
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(39);
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 33)
                        kind = 33;
                     jjCheckNAdd(39);
                  }
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 36)
                        kind = 36;
                  }
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 37)
                        kind = 37;
                  }
                  if (jjCanMove_14(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 39)
                        kind = 39;
                  }
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 45)
                        kind = 45;
                     jjCheckNAddStates(29, 31);
                  }
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 50)
                        kind = 50;
                     jjCheckNAddStates(7, 21);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(22, 28);
                  }
                  break;
               case 110:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 94:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 82:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 117:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 81:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 619:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 66:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 618:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 80:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 617:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 232:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 62:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 124:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(218);
                  }
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 9)
                     kind = 9;
                  break;
               case 5:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 10)
                     kind = 10;
                  break;
               case 8:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               case 11:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 12)
                     kind = 12;
                  break;
               case 14:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2) && kind > 19)
                     kind = 19;
                  break;
               case 17:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2) && kind > 20)
                     kind = 20;
                  break;
               case 18:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2) && kind > 25)
                     kind = 25;
                  break;
               case 22:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2) && kind > 28)
                     kind = 28;
                  break;
               case 23:
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2) && kind > 32)
                     kind = 32;
                  break;
               case 38:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(39);
                  break;
               case 39:
                  if (!jjCanMove_10(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(39);
                  break;
               case 43:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2) && kind > 35)
                     kind = 35;
                  break;
               case 44:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2) && kind > 36)
                     kind = 36;
                  break;
               case 45:
                  if (jjCanMove_13(hiByte, i1, i2, l1, l2) && kind > 37)
                     kind = 37;
                  break;
               case 46:
                  if (jjCanMove_14(hiByte, i1, i2, l1, l2) && kind > 39)
                     kind = 39;
                  break;
               case 55:
                  if (jjCanMove_15(hiByte, i1, i2, l1, l2) && kind > 46)
                     kind = 46;
                  break;
               case 102:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2))
                     jjAddStates(173, 174);
                  break;
               case 137:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(138);
                  break;
               case 138:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(201, 203);
                  break;
               case 146:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(147);
                  break;
               case 147:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(204, 206);
                  break;
               case 180:
                  if (!jjCanMove_17(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAddStates(29, 31);
                  break;
               case 181:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(181);
                  break;
               case 182:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(182, 183);
                  break;
               case 184:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(185);
                  break;
               case 185:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAdd(185);
                  break;
               case 186:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 188:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(7, 21);
                  break;
               case 189:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(189, 190);
                  break;
               case 190:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(191);
                  break;
               case 191:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(191);
                  break;
               case 192:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(192, 193);
                  break;
               case 193:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2) && kind > 50)
                     kind = 50;
                  break;
               case 194:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(37, 39);
                  break;
               case 195:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(196);
                  break;
               case 196:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(196, 183);
                  break;
               case 197:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(197, 198);
                  break;
               case 198:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(183);
                  break;
               case 199:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(40, 42);
                  break;
               case 200:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(201);
                  break;
               case 201:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(201, 187);
                  break;
               case 202:
                  if (jjCanMove_18(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(202, 203);
                  break;
               case 203:
                  if (jjCanMove_17(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(187);
                  break;
               case 204:
                  if (!jjCanMove_18(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(204);
                  break;
               case 214:
                  if (!jjCanMove_19(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(22, 28);
                  break;
               case 215:
                  if (!jjCanMove_19(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(4, 6);
                  break;
               case 217:
                  if (!jjCanMove_16(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 218:
                  if (!jjCanMove_19(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(218);
                  break;
               case 220:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2))
                     jjAddStates(43, 44);
                  break;
               case 222:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  break;
               case 224:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 225:
                  if (jjCanMove_19(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(225, 212);
                  break;
               case 227:
                  if (jjCanMove_16(hiByte, i1, i2, l1, l2))
                     jjAddStates(45, 46);
                  break;
               case 234:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(235);
                  break;
               case 235:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(207, 209);
                  break;
               case 246:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(247);
                  break;
               case 247:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(210, 212);
                  break;
               case 257:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(258);
                  break;
               case 258:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(213, 215);
                  break;
               case 271:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(272);
                  break;
               case 272:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(216, 218);
                  break;
               case 285:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(286);
                  break;
               case 286:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(219, 221);
                  break;
               case 295:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  break;
               case 296:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(222, 224);
                  break;
               case 370:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(371);
                  break;
               case 371:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(225, 227);
                  break;
               case 378:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(379);
                  break;
               case 379:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(228, 230);
                  break;
               case 387:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(388);
                  break;
               case 388:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(231, 233);
                  break;
               case 397:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(398);
                  break;
               case 398:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(234, 236);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 617 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   222, 223, 225, 212, 215, 216, 218, 189, 190, 192, 193, 194, 195, 197, 198, 183, 
   199, 200, 202, 203, 187, 204, 215, 216, 218, 222, 223, 225, 212, 181, 182, 186, 
   126, 127, 128, 206, 209, 194, 195, 183, 199, 200, 187, 220, 221, 227, 228, 224, 
   226, 217, 219, 209, 210, 211, 206, 207, 208, 206, 207, 208, 209, 210, 211, 604, 
   605, 607, 610, 612, 616, 527, 532, 536, 539, 544, 547, 552, 556, 562, 566, 572, 
   577, 581, 587, 591, 597, 599, 601, 508, 514, 518, 523, 490, 505, 441, 447, 453, 
   459, 466, 473, 480, 483, 486, 414, 415, 417, 418, 421, 423, 426, 428, 431, 434, 
   368, 373, 376, 381, 385, 391, 395, 401, 405, 408, 411, 315, 316, 318, 322, 323, 
   326, 328, 329, 332, 337, 339, 343, 346, 348, 351, 353, 356, 364, 232, 237, 240, 
   244, 249, 252, 255, 260, 264, 269, 275, 279, 283, 289, 293, 299, 303, 312, 175, 
   179, 166, 171, 153, 155, 156, 159, 161, 132, 135, 140, 144, 150, 102, 103, 137, 
   138, 146, 147, 184, 185, 234, 235, 246, 247, 257, 258, 271, 272, 285, 286, 295, 
   296, 370, 371, 378, 379, 387, 388, 397, 398, 137, 138, 139, 146, 147, 148, 234, 
   235, 236, 246, 247, 248, 257, 258, 259, 271, 272, 273, 285, 286, 287, 295, 296, 
   297, 370, 371, 372, 378, 379, 380, 387, 388, 389, 397, 398, 399, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec0[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec1[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec3[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_4(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec4[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_5(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec5[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_6(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 34:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_7(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec8[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_8(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec9[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_9(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec10[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_10(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec12[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_11(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 3:
         return ((jjbitVec13[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_12(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 33:
         return ((jjbitVec14[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_13(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 3:
         return ((jjbitVec15[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_14(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec16[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_15(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 6:
         return ((jjbitVec17[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_16(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec20[i2] & l2) != 0L);
      default :
         if ((jjbitVec18[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_17(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 6:
         return ((jjbitVec21[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_18(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 6:
         return ((jjbitVec24[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec25[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 23:
         return ((jjbitVec29[i2] & l2) != 0L);
      case 24:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 27:
         return ((jjbitVec31[i2] & l2) != 0L);
      case 28:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 168:
         return ((jjbitVec33[i2] & l2) != 0L);
      default :
         if ((jjbitVec22[i1] & l1) != 0L)
            if ((jjbitVec23[i2] & l2) == 0L)
               return false;
            else
            return true;
         return false;
   }
}
private static final boolean jjCanMove_19(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec37[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec38[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec39[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec40[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec41[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec42[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec43[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec44[i2] & l2) != 0L);
      case 247:
         return ((jjbitVec45[i2] & l2) != 0L);
      case 250:
         return ((jjbitVec46[i2] & l2) != 0L);
      case 251:
         return ((jjbitVec47[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec48[i2] & l2) != 0L);
      case 254:
         return ((jjbitVec49[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec50[i2] & l2) != 0L);
      default :
         if ((jjbitVec34[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\73", "\72\75", "\174", "\254", null, null, null, 
null, "\u2208", "\u2286", "\u2282", "\134", "\74", "\76", null, null, "\u2225", 
"\u22a5", "\75", "\53", null, "\u207b", null, null, "\u2297", "\57", "\41", null, null, 
null, null, null, null, "\260", null, "\155\151\156\146", "\162\141\144", "\47", 
null, null, null, null, "\170", "\171", "\172", null, null, null, null, null, null, 
null, null, null, null, null, null, "\155\141\164\50", null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\145\162\146\50", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, 
"\147\141\155\155\141\122\145\147\165\154\141\162\151\172\145\144\50", null, "\143\142\162\164\50", null, null, null, null, null, null, null, 
"\162\141\156\144\157\155\50\51", "\160\157\154\141\162\164\157\160\157\151\156\164\247\50", null, null, null, 
"\72", "\133", "\135", "\51", "\173", "\175", "\50", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xf9bffffbffffffe1L, 0xfefffffffffffffL, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[617];
private final int[] jjstateSet = new int[1234];
protected char curChar;
/** Constructor. */
public ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 617; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
